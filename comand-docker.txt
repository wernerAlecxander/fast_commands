
for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
for pkg in docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras; do sudo apt-get purge $pkg; done (meu)
for pkg in /var/lib/Docker /var/lib/containerd; do sudo rm -rf $pkg; done
for pkg in /etc/apt/sources.list.d/docker.list /etc/apt/keyrings/docker.asc; do sudo rm -rf $pkg; done
for pkg in apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin; do sudo apt-get install $pkg; done
for pkg in docker.service containerd.service; do systemctl enable $pkg; done

sudo systemctl disable docker.service
sudo systemctl disable containerd.service

docker system prune
docker system prune -a (IMPORTANTE: REMOVE TODOS OS CONTAINERS)
docker images -f dangling=true
docker images purge (deleta todas as imagens)
docker run -d -v nome_vol:/app nginx [IMPORTANTE] [CRIA UM VOLUME CHAMADO NOME_VOL ASSOCIADO A /APP NGINX]
docker stop $(docker ps -a -q) [PARA TODOS OS CONTAINERS]
docker volume rm $(docker volume ls -q) [REMOVE TODOS OS VOLUMES SEM USO NAQUELE INSTANTE]
docker run --rm -v my-data-volume:/data -v $(pwd):/backup ubuntu tar cvf/ backup/my-data-volume.tar/data
docker run -d --name devtest --mount source=myvol2,target=/app nginx:latest

sudo systemctl status docker

docker container run -d nginx
docker service start
docker network inspect --help
docker container ls
 docker container run -it debian /bin/bash
 docker network ls
 docker container run -d --name ngnix --network none ngnix (cria um container sem conexão com a rede brigde)
 docker network create live_net
 docker image pull python
 docker image inspect python
 docker container run -it --rm --name meu_python python bash
 docker container run -it --rm --name meu_python python
 docker container run -it --rm -p 80:8080 python
 docker container run -it --rm -m 512M python
 docker container run -it --rm -c 512 python
 docker container list -a
 docker container stop meu_python
 docker container start meu_python
 docker rmi $(docker images -a -q)

 docker exec -it node-postgres-1 psql -U postgres -d postgres
 explain analyze select * from pessoas where apelido = 'foo'

 docker info --format '{{range .ClientInfo.Plugins}}{{if eq .Name "compose"}}{{.Path}}{{end}}{{end}}'(VER LOCAL INSTALAÇÃO DOCKER)
 
 